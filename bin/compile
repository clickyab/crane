#!/bin/bash -x
set -eo pipefail

steptxt="----->"
YELLOW='\033[1;33m'
RED='\033[1;31m'
NC='\033[0m' # No Color

export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|GOPATH|GOROOT|GOOS|GOBIN)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

warn() {
    echo -e "${YELLOW} !!    $@${NC}"
}

err() {
    echo -e >&2 "${RED} !!    $@${NC}"
}

step() {
    echo "$steptxt $@"
}

start() {
    echo -n "$steptxt $@... "
}

finished() {
    echo "done"
}

mkdir -p "$1" "$2"
BUILD=$(cd "$1/" && pwd)
export CACHE=$(cd "$2/" && pwd)
export WORK_DIR=${CACHE}
export ROOT=${BUILD}

export_env_dir $3
source ${BUILD}/bin/env_check

GOVERSION=${GOVERSION:-go1.8.1}

install_go() {
    start $1
    step "Downloading ${GOVERSION}"
    wget -c -O ${CACHE}/${GOVERSION}.linux-amd64.tar.gz https://storage.googleapis.com/golang/${GOVERSION}.linux-amd64.tar.gz 2>&1 >/dev/null

    step "Install ${GOVERSION}"
    mkdir -p "${CACHE}/${GOVERSION}"
    tar -C "${CACHE}/${GOVERSION}" -xzf ${CACHE}/${GOVERSION}.linux-amd64.tar.gz
}

# Sets up GOPATH (and posibly other GO* env vars) and returns the location of
# the source code as $src. The output of this function is meant to be eval'd'
setupGOPATH() {
    local name="${1}"
    local t="$(mktemp -d)"

    cp -R ${BUILD}/* ${t}
    GOPATH="${t}/"
    echo export GOBIN="${BUILD}/bin"

    local src="${GOPATH}/src/${name}"
    mkdir -p "${src}"
    mkdir -p "${BUILD}/bin"
    mv -t "${src}" "${t}"/*

    echo "GOPATH=${GOPATH}"
    echo "src=${src}"
}

name="clickyab.com/exchange"

export GOROOT=${CACHE}/${GOVERSION}/go
# Prepare
cd ${ROOT} && make prepare

eval "$(setupGOPATH ${name})"
# Set the GOBIN make any executable build with go in the cache dir
export GOBIN=${ROOT}/bin
export PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin:${ROOT}/bin

go version || install_go "go is not installed"
go version || grep ${GOVERSION} || install_go "go version is not ${GOVERSION}"

cd ${src}

make -f ${src}/Makefile codegen
make -f ${src}/Makefile all
